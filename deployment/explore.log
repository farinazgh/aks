PS C:\Users\farin> az aks create -g $RG -n AKS-AZCLI-SMALL --node-count 2
{
  "aadProfile": null,
  "addonProfiles": null,
  "agentPoolProfiles": [
    {
      "availabilityZones": null,
      "capacityReservationGroupId": null,
      "count": 2,
      "creationData": null,
      "currentOrchestratorVersion": "1.29.8",
      "enableAutoScaling": false,
      "enableEncryptionAtHost": false,
      "enableFips": false,
      "enableNodePublicIp": false,
      "enableUltraSsd": false,
      "gpuInstanceProfile": null,
      "hostGroupId": null,
      "kubeletConfig": null,
      "kubeletDiskType": "OS",
      "linuxOsConfig": null,
      "maxCount": null,
      "maxPods": 110,
      "minCount": null,
      "mode": "System",
      "name": "nodepool1",
      "networkProfile": null,
      "nodeImageVersion": "AKSUbuntu-2204gen2containerd-202409.09.0",
      "nodeLabels": null,
      "nodePublicIpPrefixId": null,
      "nodeTaints": null,
      "orchestratorVersion": "1.29",
      "osDiskSizeGb": 128,
      "osDiskType": "Managed",
      "osSku": "Ubuntu",
      "osType": "Linux",
      "podSubnetId": null,
      "powerState": {
        "code": "Running"
      },
      "provisioningState": "Succeeded",
      "proximityPlacementGroupId": null,
      "scaleDownMode": null,
      "scaleSetEvictionPolicy": null,
      "scaleSetPriority": null,
      "spotMaxPrice": null,
      "tags": null,
      "type": "VirtualMachineScaleSets",
      "upgradeSettings": {
        "drainTimeoutInMinutes": null,
        "maxSurge": "10%",
        "nodeSoakDurationInMinutes": null
      },
      "vmSize": "Standard_DS2_v2",
      "vnetSubnetId": null,
      "windowsProfile": null,
      "workloadRuntime": null
    }
  ],
  "apiServerAccessProfile": null,
  "autoScalerProfile": null,
  "autoUpgradeProfile": {
    "nodeOsUpgradeChannel": "NodeImage",
    "upgradeChannel": null
  },
  "azureMonitorProfile": null,
  "azurePortalFqdn": "aks-azcli--aksrg-2aed25-rrj7ghgm.portal.hcp.northeurope.azmk8s.io",
  "currentKubernetesVersion": "1.29.8",
  "disableLocalAccounts": false,
  "diskEncryptionSetId": null,
  "dnsPrefix": "AKS-AZCLI--AKSRG-2aed25",
  "enablePodSecurityPolicy": null,
  "enableRbac": true,
  "extendedLocation": null,
  "fqdn": "aks-azcli--aksrg-2aed25-rrj7ghgm.hcp.northeurope.azmk8s.io",
  "fqdnSubdomain": null,
  "httpProxyConfig": null,
  "id": "/subscriptions/2aed256d-4c48-4052-b5a8-c87ca4817277/resourcegroups/AKSRG/providers/Microsoft.ContainerService/managedClusters/AKS-AZCLI-SMALL",
  "identity": {
    "delegatedResources": null,
    "principalId": "87c370d1-3761-41e7-af60-2f119de3c6b9",
    "tenantId": "b5e27f6c-99f4-4f68-8292-6dc19d94dc51",
    "type": "SystemAssigned",
    "userAssignedIdentities": null
  },
  "identityProfile": {
    "kubeletidentity": {
      "clientId": "c150c68e-bbc8-4a0e-b9f3-bdbf0129168e",
      "objectId": "7adbf1b3-0652-43ed-8600-0739b9dffb89",
      "resourceId": "/subscriptions/2aed256d-4c48-4052-b5a8-c87ca4817277/resourcegroups/MC_AKSRG_AKS-AZCLI-SMALL_northeurope/providers/Microsoft.ManagedIdentity/userAssignedIdentities/AKS-AZCLI-SMALL-agentpool"
    }
  },
  "ingressProfile": null,
  "kubernetesVersion": "1.29",
  "linuxProfile": {
    "adminUsername": "azureuser",
    "ssh": {
      "publicKeys": [
        {
          "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDXyYrdKFHNBqK9k7YpW9TIZFZJX9E/9AcVbdiE3EVwxpYcACB7SAeReH2qQRm/CwFcJfoMmBHU7lSA3fNz9xT8fs5JaaCUSkXUbggeWAFRsoYeUBYDE0H6MVWOlhnDWrlbthtnqoziJxggwiIEHmqPiIG0TjRSd4N7RoXMIuzvqzJnqVskmWFwj7ds9ZNYWqQb9lkHRBWbTIagJTec4AzASjOZCiDc/pBEl+PFFOnpwqQ4sJlxcJUvNVHzr7YJPW/e2BhzPyW/VaT/9UHNfjGH7Hc701+Etm7UbnKrZPskG86TAv6pkIsXwJarTWXeCANe51mGRlro6/sr94KoNSZzznuPSlS6SVdmqq/OagEGLY3smT90SJaqhMHfF/7AGL0Rd6YqjxEsyY+rF6i9g30nUTWF7hQkR9St4wpSPQD7TyDft8cgCpNzdXMk7v4NHi7BqI6vmCbR6GTskIHob/veuQO4b2XVmlH3b4yTLqspTgc3m979ViThT5D4Gg0hOeU= farin@DESKTOP-UA55OL9\n"
        }
      ]
    }
  },
  "location": "northeurope",
  "maxAgentPools": 100,
  "metricsProfile": {
    "costAnalysis": {
      "enabled": false
    }
  },
  "name": "AKS-AZCLI-SMALL",
  "networkProfile": {
    "dnsServiceIp": "10.0.0.10",
    "ipFamilies": [
      "IPv4"
    ],
    "loadBalancerProfile": {
      "allocatedOutboundPorts": null,
      "backendPoolType": "nodeIPConfiguration",
      "effectiveOutboundIPs": [
        {
          "id": "/subscriptions/2aed256d-4c48-4052-b5a8-c87ca4817277/resourceGroups/MC_AKSRG_AKS-AZCLI-SMALL_northeurope/providers/Microsoft.Network/publicIPAddresses/ee5e6fbe-1305-4bf4-a146-12704905602e",
          "resourceGroup": "MC_AKSRG_AKS-AZCLI-SMALL_northeurope"
        }
      ],
      "enableMultipleStandardLoadBalancers": null,
      "idleTimeoutInMinutes": null,
      "managedOutboundIPs": {
        "count": 1,
        "countIpv6": null
      },
      "outboundIPs": null,
      "outboundIpPrefixes": null
    },
    "loadBalancerSku": "standard",
    "natGatewayProfile": null,
    "networkDataplane": null,
    "networkMode": null,
    "networkPlugin": "kubenet",
    "networkPluginMode": null,
    "networkPolicy": null,
    "outboundType": "loadBalancer",
    "podCidr": "10.244.0.0/16",
    "podCidrs": [
      "10.244.0.0/16"
    ],
    "serviceCidr": "10.0.0.0/16",
    "serviceCidrs": [
      "10.0.0.0/16"
    ]
  },
  "nodeResourceGroup": "MC_AKSRG_AKS-AZCLI-SMALL_northeurope",
  "oidcIssuerProfile": {
    "enabled": false,
    "issuerUrl": null
  },
  "podIdentityProfile": null,
  "powerState": {
    "code": "Running"
  },
  "privateFqdn": null,
  "privateLinkResources": null,
  "provisioningState": "Succeeded",
  "publicNetworkAccess": null,
  "resourceGroup": "AKSRG",
  "resourceUid": "66f81a62bbeb360001eb5456",
  "securityProfile": {
    "azureKeyVaultKms": null,
    "defender": null,
    "imageCleaner": null,
    "workloadIdentity": null
  },
  "serviceMeshProfile": null,
  "servicePrincipalProfile": {
    "clientId": "msi",
    "secret": null
  },
  "sku": {
    "name": "Base",
    "tier": "Free"
  },
  "storageProfile": {
    "blobCsiDriver": null,
    "diskCsiDriver": {
      "enabled": true
    },
    "fileCsiDriver": {
      "enabled": true
    },
    "snapshotController": {
      "enabled": true
    }
  },
  "supportPlan": "KubernetesOfficial",
  "systemData": null,
  "tags": null,
  "type": "Microsoft.ContainerService/ManagedClusters",
  "upgradeSettings": null,
  "windowsProfile": null,
  "workloadAutoScalerProfile": {
    "keda": null,
    "verticalPodAutoscaler": null
  }
}
PS C:\Users\farin> az aks list -o table
Name               Location     ResourceGroup    KubernetesVersion    CurrentKubernetesVersion    ProvisioningState    Fqdn
-----------------  -----------  ---------------  -------------------  --------------------------  -------------------  ----------------------------------------------------------
AKS-AZCLI-DEFAULT  northeurope  AKSRG            1.29                 1.29.8                      Succeeded            aks-azcli--aksrg-2aed25-g8rkcees.hcp.northeurope.azmk8s.io
AKS-AZCLI-SMALL    northeurope  AKSRG            1.29                 1.29.8                      Succeeded            aks-azcli--aksrg-2aed25-rrj7ghgm.hcp.northeurope.azmk8s.io
PS C:\Users\farin> az aks list -o table
Name               Location     ResourceGroup    KubernetesVersion    CurrentKubernetesVersion    ProvisioningState    Fqdn
-----------------  -----------  ---------------  -------------------  --------------------------  -------------------  ----------------------------------------------------------
AKS-AZCLI-DEFAULT  northeurope  AKSRG            1.29                 1.29.8                      Succeeded            aks-azcli--aksrg-2aed25-g8rkcees.hcp.northeurope.azmk8s.io
AKS-AZCLI-SMALL    northeurope  AKSRG            1.29                 1.29.8                      Succeeded            aks-azcli--aksrg-2aed25-rrj7ghgm.hcp.northeurope.azmk8s.io
PS C:\Users\farin> az aks browse -n AKS-AZCLI-DEFAULT -g $RG
Kubernetes resources view on https://portal.azure.com/#resource/subscriptions/2aed256d-4c48-4052-b5a8-c87ca4817277/resourceGroups/AKSRG/providers/Microsoft.ContainerService/managedClusters/AKS-AZCLI-DEFAULT/workloads
"Kubernetes resources view on https://portal.azure.com/#resource/subscriptions/2aed256d-4c48-4052-b5a8-c87ca4817277/resourceGroups/AKSRG/providers/Microsoft.ContainerService/managedClusters/AKS-AZCLI-DEFAULT/workloads"
PS C:\Users\farin> cd C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> az bicep install
Installing Bicep CLI v0.30.23...
The configuration value of bicep.use_binary_from_path has been set to 'false'.
Successfully installed Bicep CLI to "C:\Users\farin\.azure\bin\bicep.exe".
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> az bicep decompile --file aks-arm.json
WARNING: Decompilation is a best-effort process, as there is no guaranteed mapping from ARM JSON to Bicep Template or Bicep Parameters.
You may need to fix warnings and errors in the generated bicep/bicepparam file(s), or decompilation may fail entirely if an accurate conversion is not possible.
If you would like to report any issues or inaccurate conversions, please see https://github.com/Azure/bicep/issues.
C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS\aks-arm.bicep(22,22) : Warning adminusername-should-not-be-literal: Property 'adminUserName' should not use a literal value. Use a param instead. Found literal string value "aksadmin" [https://aka.ms/bicep/linter/adminusername-should-not-be-literal]

PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> az bicep decompile --file aks-arm.json^C
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> az aks get-credentials --resource-group $RG --name AKS-AZCLI-DEFAULT
Merged "AKS-AZCLI-DEFAULT" as current context in C:\Users\farin\.kube\config
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> kubectl get nodes
NAME                                STATUS   ROLES    AGE     VERSION
aks-nodepool1-76158954-vmss000003   Ready    <none>   3m49s   v1.29.8
aks-nodepool1-76158954-vmss000004   Ready    <none>   3m53s   v1.29.8
aks-nodepool1-76158954-vmss000005   Ready    <none>   3m56s   v1.29.8
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> $SSH=(Get-Content id_rsa.pub)
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> kubectl cluster-info
Kubernetes control plane is running at https://aks-azcli--aksrg-2aed25-g8rkcees.hcp.northeurope.azmk8s.io:443
CoreDNS is running at https://aks-azcli--aksrg-2aed25-g8rkcees.hcp.northeurope.azmk8s.io:443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy
Metrics-server is running at https://aks-azcli--aksrg-2aed25-g8rkcees.hcp.northeurope.azmk8s.io:443/api/v1/namespaces/kube-system/services/https:metrics-server:/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> kubectl get nodes -o wide
NAME                                STATUS   ROLES    AGE   VERSION   INTERNAL-IP   EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION      CONTAINER-RUNTIME
aks-nodepool1-76158954-vmss000003   Ready    <none>   56m   v1.29.8   10.224.0.5    <none>        Ubuntu 22.04.4 LTS   5.15.0-1071-azure   containerd://1.7.20-1
aks-nodepool1-76158954-vmss000004   Ready    <none>   56m   v1.29.8   10.224.0.4    <none>        Ubuntu 22.04.4 LTS   5.15.0-1071-azure   containerd://1.7.20-1
aks-nodepool1-76158954-vmss000005   Ready    <none>   56m   v1.29.8   10.224.0.6    <none>        Ubuntu 22.04.4 LTS   5.15.0-1071-azure   containerd://1.7.20-1
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> kubectl get all --all-namespaces
NAMESPACE     NAME                                      READY   STATUS    RESTARTS   AGE
kube-system   pod/azure-ip-masq-agent-5rp48             1/1     Running   0          57m
kube-system   pod/azure-ip-masq-agent-lmqzm             1/1     Running   0          57m
kube-system   pod/azure-ip-masq-agent-nz8gm             1/1     Running   0          57m
kube-system   pod/cloud-node-manager-l9prc              1/1     Running   0          57m
kube-system   pod/cloud-node-manager-rf2xb              1/1     Running   0          57m
kube-system   pod/cloud-node-manager-vxb5c              1/1     Running   0          57m
kube-system   pod/coredns-597bb9d4db-mgpdj              1/1     Running   0          112m
kube-system   pod/coredns-597bb9d4db-v27mq              1/1     Running   0          112m
kube-system   pod/coredns-autoscaler-689db4649c-878rb   1/1     Running   0          112m
kube-system   pod/csi-azuredisk-node-4x75l              3/3     Running   0          57m
kube-system   pod/csi-azuredisk-node-fh4hv              3/3     Running   0          57m
kube-system   pod/csi-azuredisk-node-txb8s              3/3     Running   0          57m
kube-system   pod/csi-azurefile-node-cb9rf              3/3     Running   0          57m
kube-system   pod/csi-azurefile-node-f8tmb              3/3     Running   0          57m
kube-system   pod/csi-azurefile-node-szldr              3/3     Running   0          57m
kube-system   pod/konnectivity-agent-5c9db956f5-gsspr   1/1     Running   0          112m
kube-system   pod/konnectivity-agent-5c9db956f5-hd88l   1/1     Running   0          112m
kube-system   pod/kube-proxy-dvw9r                      1/1     Running   0          57m
kube-system   pod/kube-proxy-fcdgn                      1/1     Running   0          57m
kube-system   pod/kube-proxy-pr94v                      1/1     Running   0          57m
kube-system   pod/metrics-server-677fd8c788-24t5k       2/2     Running   0          112m
kube-system   pod/metrics-server-677fd8c788-x6t85       2/2     Running   0          112m

NAMESPACE     NAME                     TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)         AGE
default       service/kubernetes       ClusterIP   10.0.0.1      <none>        443/TCP         149m
kube-system   service/kube-dns         ClusterIP   10.0.0.10     <none>        53/UDP,53/TCP   148m
kube-system   service/metrics-server   ClusterIP   10.0.176.46   <none>        443/TCP         148m

NAMESPACE     NAME                                        DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE
kube-system   daemonset.apps/azure-ip-masq-agent          3         3         3       3            3           <none>          148m
kube-system   daemonset.apps/cloud-node-manager           3         3         3       3            3           <none>          148m
kube-system   daemonset.apps/cloud-node-manager-windows   0         0         0       0            0           <none>          148m
kube-system   daemonset.apps/csi-azuredisk-node           3         3         3       3            3           <none>          148m
kube-system   daemonset.apps/csi-azuredisk-node-win       0         0         0       0            0           <none>          148m
kube-system   daemonset.apps/csi-azurefile-node           3         3         3       3            3           <none>          148m
kube-system   daemonset.apps/csi-azurefile-node-win       0         0         0       0            0           <none>          148m
kube-system   daemonset.apps/kube-proxy                   3         3         3       3            3           <none>          148m

NAMESPACE     NAME                                 READY   UP-TO-DATE   AVAILABLE   AGE
kube-system   deployment.apps/coredns              2/2     2            2           148m
kube-system   deployment.apps/coredns-autoscaler   1/1     1            1           148m
kube-system   deployment.apps/konnectivity-agent   2/2     2            2           148m
kube-system   deployment.apps/metrics-server       2/2     2            2           148m

NAMESPACE     NAME                                            DESIRED   CURRENT   READY   AGE
kube-system   replicaset.apps/coredns-597bb9d4db              2         2         2       148m
kube-system   replicaset.apps/coredns-autoscaler-689db4649c   1         1         1       148m
kube-system   replicaset.apps/konnectivity-agent-5c9db956f5   2         2         2       112m
kube-system   replicaset.apps/konnectivity-agent-649d7bc457   0         0         0       148m
kube-system   replicaset.apps/metrics-server-677fd8c788       2         2         2       147m
kube-system   replicaset.apps/metrics-server-7b445dd694       0         0         0       148m
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> kubectl get all --all-namespaces > kubectl-getAll-allnamespaces.tx
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> kubectl config view
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: DATA+OMITTED
    server: https://aks-azcli--aksrg-2aed25-g8rkcees.hcp.northeurope.azmk8s.io:443
  name: AKS-AZCLI-DEFAULT
- cluster:
    certificate-authority-data: DATA+OMITTED
    server: https://kubernetes.docker.internal:6443
  name: docker-desktop
contexts:
- context:
    cluster: AKS-AZCLI-DEFAULT
    user: clusterUser_AKSRG_AKS-AZCLI-DEFAULT
  name: AKS-AZCLI-DEFAULT
- context:
    cluster: docker-desktop
    user: docker-desktop
  name: docker-desktop
current-context: AKS-AZCLI-DEFAULT
kind: Config
preferences: {}
users:
- name: clusterUser_AKSRG_AKS-AZCLI-DEFAULT
  user:
    client-certificate-data: DATA+OMITTED
    client-key-data: DATA+OMITTED
    token: REDACTED
- name: docker-desktop
  user:
    client-certificate-data: DATA+OMITTED
    client-key-data: DATA+OMITTED
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> history

  Id CommandLine
  -- -----------
   1 az login
   2 az login --tenant b5e27f6c-99f4-4f68-8292-6dc19d94dc51
   3 az login --tenant b5e27f6c-99f4-4f68-8292-6dc19d94dc51
   4 $Region="northeurope"
   5 $RG="AKSRG"
   6 Set-Item Env:\SuppressAzurePowerShellBreakingChangeWarnings "true"
   7 Clear-Host
   8 az group create -l $Region -n $RG
   9 az aks create -g $RG -n AKS-AZCLI-DEFAULT
  10 history
  11 clear
  12 az aks create -g $RG -n AKS-AZCLI-SMALL --node-count 2
  13 az aks list -o table
  14 az aks list -o table
  15 az aks browse -n AKS-AZCLI-DEFAULT -g $RG
  16 cd C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS
  17 az bicep install
  18 az bicep decompile --file aks-arm.json
  19 az aks get-credentials --resource-group $RG --name AKS-AZCLI-DEFAULT
  20 kubectl get nodes
  21 $SSH=(Get-Content id_rsa.pub)
  22 kubectl cluster-info
  23 kubectl get nodes -o wide
  24 kubectl get all --all-namespaces
  25 kubectl get all --all-namespaces > kubectl-getAll-allnamespaces.tx
  26 kubectl config view


PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS>  kubectl -n kube-system get configmaps
NAME                                                   DATA   AGE
azure-ip-masq-agent-config-reconciled                  1      3h25m
coredns                                                1      3h25m
coredns-autoscaler                                     1      3h24m
coredns-custom                                         0      3h25m
extension-apiserver-authentication                     6      3h26m
kube-apiserver-legacy-service-account-token-tracking   1      3h26m
kube-root-ca.crt                                       1      3h25m
overlay-upgrade-data                                   4      3h25m
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> kubectl -n kube-system get configmaps coredns -o yaml
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        ready
        health {
          lameduck 5s
        }
        kubernetes cluster.local in-addr.arpa ip6.arpa {
          pods insecure
          fallthrough in-addr.arpa ip6.arpa
          ttl 30
        }
        prometheus :9153
        forward . /etc/resolv.conf
        cache 30
        loop
        reload
        loadbalance
        import custom/*.override
    }
    import custom/*.server
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"Corefile":".:53 {\n    errors\n    ready\n    health {\n      lameduck 5s\n    }\n    kubernetes cluster.local in-addr.arpa ip6.arpa {\n      pods insecure\n      fallthrough in-addr.arpa ip6.arpa\n      ttl 30\n    }\n    prometheus :9153\n    forward . /etc/resolv.conf\n    cache 30\n    loop\n    reload\n    loadbalance\n    import custom/*.override\n}\nimport custom/*.server\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true"},"name":"coredns","namespace":"kube-system"}}
  creationTimestamp: "2024-09-28T14:44:41Z"
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
  name: coredns
  namespace: kube-system
  resourceVersion: "436"
  uid: 27fb0aa2-71bf-4505-80e9-c0974c6ebad3
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> kubectl -n kube-system get configmaps coredns-autoscaler -o yaml
apiVersion: v1
data:
  ladder: '{"coresToReplicas":[[1,2],[512,3],[1024,4],[2048,5]],"nodesToReplicas":[[1,2],[8,3],[16,4],[32,5]]}'
kind: ConfigMap
metadata:
  creationTimestamp: "2024-09-28T14:45:42Z"
  name: coredns-autoscaler
  namespace: kube-system
  resourceVersion: "1151"
  uid: 4e6b84e7-cd65-4415-8115-8471bf3594fa
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> kubectl get nodes
NAME                                STATUS   ROLES    AGE    VERSION
aks-nodepool1-76158954-vmss000003   Ready    <none>   116m   v1.29.8
aks-nodepool1-76158954-vmss000004   Ready    <none>   116m   v1.29.8
aks-nodepool1-76158954-vmss000005   Ready    <none>   116m   v1.29.8
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> ssh aks-nodepool1-76158954-vmss000003
ssh: Could not resolve hostname aks-nodepool1-76158954-vmss000003: No such host is known.
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> az aks show --resource-group $RG --name AKS-AZCLI-DEFAULT --query agentPoolProfiles[0].name
"nodepool1"
PS C:\Users\farin\IdeaProjects\azure-hands-on\AKS-EKS> az aks show --resource-group $RG --name AKS-AZCLI-DEFAULT
{
  "aadProfile": null,
  "addonProfiles": null,
  "agentPoolProfiles": [
    {
      "availabilityZones": null,
      "capacityReservationGroupId": null,
      "count": 3,
      "creationData": null,
      "currentOrchestratorVersion": "1.29.8",
      "enableAutoScaling": false,
      "enableEncryptionAtHost": false,
      "enableFips": false,
      "enableNodePublicIp": false,
      "enableUltraSsd": false,
      "gpuInstanceProfile": null,
      "hostGroupId": null,
      "kubeletConfig": null,
      "kubeletDiskType": "OS",
      "linuxOsConfig": null,
      "maxCount": null,
      "maxPods": 110,
      "minCount": null,
      "mode": "System",
      "name": "nodepool1",
      "networkProfile": null,
      "nodeImageVersion": "AKSUbuntu-2204gen2containerd-202409.09.0",
      "nodeLabels": null,
      "nodePublicIpPrefixId": null,
      "nodeTaints": null,
      "orchestratorVersion": "1.29",
      "osDiskSizeGb": 128,
      "osDiskType": "Managed",
      "osSku": "Ubuntu",
      "osType": "Linux",
      "podSubnetId": null,
      "powerState": {
        "code": "Running"
      },
      "provisioningState": "Succeeded",
      "proximityPlacementGroupId": null,
      "scaleDownMode": null,
      "scaleSetEvictionPolicy": null,
      "scaleSetPriority": null,
      "spotMaxPrice": null,
      "tags": null,
      "type": "VirtualMachineScaleSets",
      "upgradeSettings": {
        "drainTimeoutInMinutes": null,
        "maxSurge": "10%",
        "nodeSoakDurationInMinutes": null
      },
      "vmSize": "Standard_DS2_v2",
      "windowsProfile": null,
      "workloadRuntime": null
    }
  ],
  "apiServerAccessProfile": null,
  "autoScalerProfile": null,
  "autoUpgradeProfile": {
    "nodeOsUpgradeChannel": "NodeImage",
    "upgradeChannel": null
  },
  "azureMonitorProfile": null,
  "azurePortalFqdn": "aks-azcli--aksrg-2aed25-g8rkcees.portal.hcp.northeurope.azmk8s.io",
  "currentKubernetesVersion": "1.29.8",
  "disableLocalAccounts": false,
  "diskEncryptionSetId": null,
  "dnsPrefix": "AKS-AZCLI--AKSRG-2aed25",
  "enablePodSecurityPolicy": null,
  "enableRbac": true,
  "extendedLocation": null,
  "fqdn": "aks-azcli--aksrg-2aed25-g8rkcees.hcp.northeurope.azmk8s.io",
  "fqdnSubdomain": null,
  "httpProxyConfig": null,
  "id": "/subscriptions/2aed256d-4c48-4052-b5a8-c87ca4817277/resourcegroups/AKSRG/providers/Microsoft.ContainerService/managedClusters/AKS-AZCLI-DEFAULT",
  "identity": {
    "delegatedResources": null,
    "principalId": "a3bcbc6a-b2c8-4f05-a6e2-8de68fa3b76d",
    "tenantId": "b5e27f6c-99f4-4f68-8292-6dc19d94dc51",
    "type": "SystemAssigned",
    "userAssignedIdentities": null
  },
  "identityProfile": {
    "kubeletidentity": {
      "clientId": "7d503996-c2ad-4245-b6e3-2ecbf2c08f77",
      "objectId": "438e37c9-edbf-4593-a005-9d00d1bf5fb7",
      "resourceId": "/subscriptions/2aed256d-4c48-4052-b5a8-c87ca4817277/resourcegroups/MC_AKSRG_AKS-AZCLI-DEFAULT_northeurope/providers/Microsoft.ManagedIdentity/userAssignedIdentities/AKS-AZCLI-DEFAULT-agentpool"
    }
  },
  "ingressProfile": null,
  "kubernetesVersion": "1.29",
  "linuxProfile": {
    "adminUsername": "azureuser",
    "ssh": {
      "publicKeys": [
        {
          "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDXyYrdKFHNBqK9k7YpW9TIZFZJX9E/9AcVbdiE3EVwxpYcACB7SAeReH2qQRm/CwFcJfoMmBHU7lSA3fNz9xT8fs5JaaCUSkXUbggeWAFRsoYeUBYDE0H6MVWOlhnDWrlbthtnqoziJxggwiIEHmqPiIG0TjRSd4N7RoXMIuzvqzJnqVskmWFwj7ds9ZNYWqQb9lkHRBWbTIagJTec4AzASjOZCiDc/pBEl+PFFOnpwqQ4sJlxcJUvNVHzr7YJPW/e2BhzPyW/VaT/9UHNfjGH7Hc701+Etm7UbnKrZPskG86TAv6pkIsXwJarTWXeCANe51mGRlro6/sr94KoNSZzznuPSlS6SVdmqq/OagEGLY3smT90SJaqhMHfF/7AGL0Rd6YqjxEsyY+rF6i9g30nUTWF7hQkR9St4wpSPQD7TyDft8cgCpNzdXMk7v4NHi7BqI6vmCbR6GTskIHob/veuQO4b2XVmlH3b4yTLqspTgc3m979ViThT5D4Gg0hOeU= farin@DESKTOP-UA55OL9\n"
        }
      ]
    }
  },
  "location": "northeurope",
  "maxAgentPools": 100,
  "metricsProfile": {
    "costAnalysis": {
      "enabled": false
    }
  },
  "name": "AKS-AZCLI-DEFAULT",
  "networkProfile": {
    "dnsServiceIp": "10.0.0.10",
    "ipFamilies": [
      "IPv4"
    ],
    "loadBalancerProfile": {
      "allocatedOutboundPorts": null,
      "backendPoolType": "nodeIPConfiguration",
      "effectiveOutboundIPs": [
        {
          "id": "/subscriptions/2aed256d-4c48-4052-b5a8-c87ca4817277/resourceGroups/MC_AKSRG_AKS-AZCLI-DEFAULT_northeurope/providers/Microsoft.Network/publicIPAddresses/47b8509d-72a8-4b4b-b8d8-0e933e292a62",
          "resourceGroup": "MC_AKSRG_AKS-AZCLI-DEFAULT_northeurope"
        }
      ],
      "enableMultipleStandardLoadBalancers": null,
      "idleTimeoutInMinutes": null,
      "managedOutboundIPs": {
        "count": 1,
        "countIpv6": null
      },
      "outboundIPs": null,
      "outboundIpPrefixes": null
    },
    "loadBalancerSku": "standard",
    "natGatewayProfile": null,
    "networkDataplane": null,
    "networkMode": null,
    "networkPlugin": "kubenet",
    "networkPluginMode": null,
    "networkPolicy": null,
    "outboundType": "loadBalancer",
    "podCidr": "10.244.0.0/16",
    "podCidrs": [
      "10.244.0.0/16"
    ],
    "serviceCidr": "10.0.0.0/16",
    "serviceCidrs": [
      "10.0.0.0/16"
    ]
  },
  "nodeResourceGroup": "MC_AKSRG_AKS-AZCLI-DEFAULT_northeurope",
  "oidcIssuerProfile": {
    "enabled": false,
    "issuerUrl": null
  },
  "podIdentityProfile": null,
  "powerState": {
    "code": "Running"
  },
  "privateFqdn": null,
  "privateLinkResources": null,
  "provisioningState": "Succeeded",
  "publicNetworkAccess": null,
  "resourceGroup": "AKSRG",
  "resourceUid": "66f815db4c05ce00014bcb5a",
  "securityProfile": {
    "azureKeyVaultKms": null,
    "defender": null,
    "imageCleaner": null,
    "workloadIdentity": null
  },
  "serviceMeshProfile": null,
  "servicePrincipalProfile": {
    "clientId": "msi"
  },
  "sku": {
    "name": "Base",
    "tier": "Free"
  },
  "storageProfile": {
    "blobCsiDriver": null,
    "diskCsiDriver": {
      "enabled": true
    },
    "fileCsiDriver": {
      "enabled": true
    },
    "snapshotController": {
      "enabled": true
    }
  },
  "supportPlan": "KubernetesOfficial",
  "systemData": null,
  "type": "Microsoft.ContainerService/ManagedClusters",
  "upgradeSettings": null,
  "windowsProfile": null,
  "workloadAutoScalerProfile": {
    "keda": null,
    "verticalPodAutoscaler": null
  }
}